# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def build(bld):
    module = bld.create_ns3_module('cachecast', ['core', 'point-to-point'])
    module.source = [
        'model/cachecast.cc',
        'model/cachecast-tag.cc',
        'model/cachecast-pid.cc',
        'model/cachecast-header.cc',
        'model/cachecast-channel.cc',
        'model/cachecast-net-device.cc',
        'model/cachecast-test-application.cc',
        'model/cachecast-server-net-device.cc',
        'helper/cachecast-server-helper.cc',
        ]

    module_test = bld.create_ns3_module_test_library('cachecast')
    module_test.source = [
        'test/cachecast-test-suite.cc',
#         'test/cachecast-example2.cc',
        ]

    headers = bld.new_task_gen(features=['ns3header'])
    headers.module = 'cachecast'
    headers.source = [
        'model/cachecast.h',
        'model/cachecast-tag.h',
        'model/cachecast-pid.h',
        'model/cachecast-header.h',
        'model/cachecast-element.h',
        'model/cachecast-channel.h',
        'model/cachecast-net-device.h',
        'model/cachecast-test-application.h',
        'model/cachecast-server-net-device.h',
        'helper/cachecast-server-helper.h',
        ]

    if bld.env.ENABLE_EXAMPLES:
        bld.add_subdirs('examples')

    # bld.ns3_python_bindings()

